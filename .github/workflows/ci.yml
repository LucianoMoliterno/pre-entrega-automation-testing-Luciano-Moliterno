name: CI TalentoLab

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      HEADLESS: "true"
      CI: "true"

    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4

    - name: Configurar Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Crear carpetas necesarias
      run: |
        mkdir -p reports logs screenshots reports/screens

    - name: Instalar dependencias de Python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Chrome
      uses: browser-actions/setup-chrome@latest

    - name: Verificar instalaciones
      run: |
        echo "=== Versiones instaladas ==="
        python --version
        pip --version
        echo ""
        echo "=== Paquetes de testing ==="
        pip list | grep -i pytest || true
        pip list | grep -i selenium || true
        pip list | grep -i behave || true
        pip list | grep -i requests || true
        echo ""
        echo "=== Chrome ==="
        google-chrome --version || chrome --version || chromium-browser --version || echo "Chrome no encontrado"
        echo ""
        echo "=== ChromeDriver ==="
        chromedriver --version || echo "ChromeDriver no encontrado en PATH"

    - name: Ejecutar tests API
      run: |
        echo "ðŸ§ª Ejecutando tests de API..."
        pytest test_api/ -v --tb=short || exit 1
      continue-on-error: false

    - name: Ejecutar tests UI (smoke)
      run: |
        echo "ðŸ§ª Ejecutando tests UI (smoke)..."
        pytest tests/ -m smoke -v --tb=short || exit 1
      continue-on-error: false

    - name: Ejecutar tests BDD (smoke)
      run: |
        echo "ðŸ§ª Ejecutando tests BDD (smoke)..."
        behave -t @smoke -f pretty || exit 1
      continue-on-error: false

    - name: Generar reportes HTML
      if: always()
      run: |
        echo "ðŸ“Š Generando reportes..."
        pytest test_api/ --html=reports/api_report.html --self-contained-html || true
        pytest tests/ -m smoke --html=reports/ui_report.html --self-contained-html || true
        behave -t @smoke -f json -o reports/behave.json || true

    - name: Subir reportes como artefactos
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ github.run_number }}
        path: |
          reports/
          logs/
          screenshots/
        retention-days: 90

    - name: Resumen final
      if: always()
      run: |
        echo "=================================="
        echo "âœ… Pipeline completado"
        echo "ðŸ“Š Reportes disponibles en Artifacts"
        echo "ðŸ”¢ Run: ${{ github.run_number }}"
        echo "=================================="
