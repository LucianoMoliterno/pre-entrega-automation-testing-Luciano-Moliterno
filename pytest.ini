[pytest]
# ============================================================================
# Configuración de pytest - Automation Testing Framework
# Autor: Luciano Moliterno
# Proyecto: SauceDemo UI + JSONPlaceholder API Testing + BDD con Behave
# ============================================================================

# Marcadores personalizados
markers =
    smoke: Marca los tests críticos de tipo smoke
    api: Pruebas de API
    ui: Pruebas de interfaz de usuario
    regression: Pruebas de regresión
    integration: Pruebas de integración
    e2e: Pruebas end-to-end del ciclo completo de operaciones

addopts =
addopts =
# Opciones por defecto
addopts =
    --html=reports/reporte_completo.html
    --html=reports/reporte.html
    --tb=short
    --reruns 2
    --self-contained-html
    -p no:warnings
    --self-contained-html

python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Directorio de tests
testpaths = tests test_api

testpaths = tests test_api tests_behave
log_cli = true
log_cli_format = %(asctime)s [%(levelname)s] %(name)s - %(message)s
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_level = INFO
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = logs/pytest_execution.log

log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)s] %(name)s:%(lineno)d - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Configuración de captura de salida
capture = no

# Timeout para tests (opcional)
# timeout = 300
console_output_style = progress
# Esta información se mostrará en el reporte HTML

